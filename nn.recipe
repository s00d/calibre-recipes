#!/usr/bin/env  python
# -*- coding: utf-8 -*-

##
## Title:        Nasha Niva (NN.BY) news Recipe
## Contact:      wistful - <wst dot public dot mail at gmail dot com>'
##
## License:      GNU General Public License v3 - http://www.gnu.org/copyleft/gpl.html
## Copyright:    wistful - <wst dot public dot mail at gmail dot com>'
##
## Written:      December 2011
## Last Edited:  2012-05-22
##

__license__     = 'GNU General Public License v3 - http://www.gnu.org/copyleft/gpl.html'
__copyright__ = '2012 wistful <wst dot public dot mail at gmail dot com>'

import re
from calibre.web.feeds.news import BasicNewsRecipe


'''
http://nn.by/
'''


rm_tags = re.compile(r'<[^<]*?>')


def cleanup(soup_tag):
    return rm_tags.sub('', str(soup_tag))


class NN(BasicNewsRecipe):
    oldest_article          = 50
    max_articles_per_feed   = 100
    __author__              = 'wistful'
    masthead_url            = "http://nn.by/images/main/logo.png"
    title                   = u'Наша Ніва'
    description             = u'Наша Ніва - Першая беларуская газета'
    INDEX                   = 'http://nn.by/rss.php'
    publisher               = 'nn.by'
    publication_type        = 'newsportal'
    category                = 'news, Belarus'

    lang        = 'by'
    language    = 'by'
    direction   = 'ltr'

    remove_tags = [dict(attrs={'href': re.compile('.*_logo.png$', re.IGNORECASE)}),
                   dict(attrs={'src': re.compile('.*_logo.png$', re.IGNORECASE)}),
                   dict(name='noindex'), dict(name='object')]
    keep_only_tags = [dict(name='div', attrs={'class': 'copy-area'}),
                      dict(name='h1', attrs={'class': 'article-title'}),
                      dict(name='div', attrs={'class': re.compile('article-info')}),
                      dict(name='div', attrs={'class': re.compile('article-content')}),
                    ]

    no_stylesheets = True

    html2epub_options = 'publisher="%s"\ncomments="%s"\ntags="%s"' % (publisher, description, category)

    def parse_index(self):
        articles = []
        doc = self.index_to_soup(self.INDEX)
        for entry in doc.findAll('item'):
            title = entry.title.contents[0]
            link = entry.link.nextSibling.replace('index.php?c=ar&i;', '?c=arprint&i')
            description = entry.description.contents
            if description:
                description = description[0]
            articles.append({'title': title, 'url': link, 'content': '', 'date': '', 'description': description})

        return [('news', articles)]
